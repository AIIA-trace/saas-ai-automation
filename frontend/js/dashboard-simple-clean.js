/**
 * Dashboard Simple - MVP Version
 * Contiene las 4 pesta√±as centralizadas para el MVP del agente de IA
 */

/**
 * Funci√≥n para adaptar el dashboard al contexto "otro" de forma simplificada
 * @param {Object} config - Configuraci√≥n de la empresa
 */
function adaptOtherContextSimple(config) {
    console.log('üöÄ Iniciando adaptaci√≥n simple del dashboard para MVP');
    
    try {
        // Crear las pesta√±as del MVP centralizadas
        createSimpleTabs();
        
        // Crear el contenido de las pesta√±as
        createTabsContent();
        
        // Cargar datos iniciales
        loadSimpleData(config);
        
        // Cargar datos existentes
        loadExistingData();
        
        // Configurar event listeners
        setupEventListeners();
        
        // Configurar funcionalidades adicionales (logout, toggle sidebar, etc.)
        setupAdditionalFeatures();
        
        // Cargar estado del bot
        loadBotStatus();
        
        console.log('‚úÖ Dashboard simple inicializado correctamente');
        
    } catch (error) {
        console.error('‚ùå Error al configurar dashboard MVP:', error);
        toastr.error('Error al configurar el dashboard', 'Error');
    }
}

/**
 * Crear las pesta√±as del MVP centralizadas
 */
function createSimpleTabs() {
    console.log('üìã Creando pesta√±as centralizadas del MVP...');
    
    const tabsContainer = document.getElementById('sector-nav-tabs');
    if (!tabsContainer) {
        console.error(' No se encontr√≥ el contenedor de pesta√±as');
        return;
    }
    
    // Crear pesta√±as din√°micamente con nueva estructura
    tabsContainer.innerHTML = `
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="calls-tab" data-bs-toggle="tab" data-bs-target="#calls-content" type="button" role="tab" aria-controls="calls-content" aria-selected="true">
                <i class="fas fa-phone me-2"></i>Registro de Llamadas
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="emails-tab" data-bs-toggle="tab" data-bs-target="#emails-content" type="button" role="tab" aria-controls="emails-content" aria-selected="false">
                <i class="fas fa-envelope me-2"></i>Gesti√≥n de Emails
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="call-bot-tab" data-bs-toggle="tab" data-bs-target="#call-bot-content" type="button" role="tab" aria-controls="call-bot-content" aria-selected="false">
                <i class="fas fa-robot me-2"></i>Configuraci√≥n del Bot
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="account-tab" data-bs-toggle="tab" data-bs-target="#account-content" type="button" role="tab" aria-controls="account-content" aria-selected="false">
                <i class="fas fa-user-cog me-2"></i>Mi Cuenta
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="billing-tab" data-bs-toggle="tab" data-bs-target="#billing-content" type="button" role="tab" aria-controls="billing-content" aria-selected="false">
                <i class="fas fa-credit-card me-2"></i>Facturaci√≥n
            </button>
        </li>
    `;
    
    // Mostrar el contenedor de pesta√±as
    document.getElementById('sector-nav-tabs-container').classList.remove('d-none');
    
    console.log('‚úÖ Pesta√±as centralizadas del MVP creadas');
}

/**
 * Agregar estilos CSS para el dashboard
 */
function addDashboardStyles() {
    // Verificar si los estilos ya existen
    if (document.getElementById('dashboard-styles')) return;
    
    // Crear elemento de estilo
    const styleEl = document.createElement('style');
    styleEl.id = 'dashboard-styles';
    styleEl.textContent = `
        .file-status {
            margin-top: 5px;
            min-height: 20px;
        }
        .file-status small {
            font-size: 0.75rem;
            line-height: 1.2;
        }
        .form-section {
            margin-bottom: 1.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #eee;
        }
        .form-section:last-child {
            border-bottom: none;
            padding-bottom: 0;
        }
        .form-section h6 {
            margin-bottom: 1rem;
            color: #495057;
        }
    `;
    
    // Agregar estilos al head
    document.head.appendChild(styleEl);
}

/**
 * Crear el contenido de la pesta√±a Registro de Llamadas
 * @returns {string} HTML de la pesta√±a
 */
function createCallsTabContent() {
    return `
        <!-- 1. Registro de Llamadas -->
        <div class="tab-pane active" id="calls-content" role="tabpanel" aria-labelledby="calls-tab" tabindex="0">
            <div class="container-fluid pt-2 pb-0">
                <!-- Registro de Llamadas -->
                <div class="row">
                    <div class="col-12">
                        <div class="card border-0 shadow-sm">
                            <div class="card-header bg-white border-bottom-0 py-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0"><i class="fas fa-list me-2"></i>Registro de Llamadas</h5>
                                    <button class="btn btn-primary btn-sm" id="refresh-calls-btn">
                                        <i class="fas fa-sync me-2"></i>Actualizar
                                    </button>
                                </div>
                            </div>
                            <div class="card-body p-0">
                                <!-- Filtros de Clasificaci√≥n -->
                                <div class="px-3 py-2 bg-light border-bottom">
                                    <div class="row align-items-center">
                                        <div class="col-md-6">
                                            <div class="d-flex align-items-center">
                                                <span class="me-2">Filtrar por:</span>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="call-filter" id="filter-calls-all" checked>
                                                    <label class="form-check-label" for="filter-calls-all">Todas</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="call-filter" id="filter-calls-pedidos">
                                                    <label class="form-check-label" for="filter-calls-pedidos">Pedidos</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="call-filter" id="filter-calls-consultas">
                                                    <label class="form-check-label" for="filter-calls-consultas">Consultas</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="call-filter" id="filter-calls-urgente">
                                                    <label class="form-check-label" for="filter-calls-urgente">Urgentes</label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 text-md-end mt-2 mt-md-0">
                                            <small class="text-muted">√öltima actualizaci√≥n: 2024-02-20 12:15</small>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                                    <table class="table table-hover mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th class="px-3 py-2">Gestionado</th>
                                                <th class="px-3 py-2">Fecha</th>
                                                <th class="px-3 py-2">N√∫mero</th>
                                                <th class="px-3 py-2">Clasificaci√≥n IA</th>
                                                <th class="px-3 py-2">Resumen</th>
                                                <th class="px-3 py-2">Duraci√≥n</th>
                                                <th class="px-3 py-2">Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody id="calls-table-body">
                                            <!-- Llamada 1: Pedido -->
                                            <tr class="call-row" data-type="pedidos" data-urgency="alta">
                                                <td class="px-3 py-2">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" id="call-managed-1">
                                                        <label class="form-check-label" for="call-managed-1"></label>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex align-items-center">
                                                        <div class="bg-success rounded-circle me-2" style="width: 8px; height: 8px;"></div>
                                                        <div>
                                                            <div class="fw-medium">2024-02-20</div>
                                                            <small class="text-muted">11:45</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div>
                                                        <div class="fw-medium">+34 600 123 456</div>
                                                        <small class="text-muted">Cliente habitual</small>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex flex-column">
                                                        <span class="badge bg-success mb-1">üì¶ PEDIDO</span>
                                                        <span class="badge bg-danger">üö® URGENTE</span>
                                                        <small class="text-muted mt-1">Confianza: 95%</small>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="fw-medium">Cliente solicita 200m2 de piel roja</div>
                                                    <small class="text-muted">Necesita entrega para el 22 de julio. Cliente Mar√≠a Garc√≠a, pedido urgente para evento. Requiere confirmaci√≥n de disponibilidad y precio final.</small>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <span class="badge bg-primary">04:32</span>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex">
                                                        <button class="btn btn-sm btn-outline-secondary me-1 play-btn" title="Escuchar grabaci√≥n">
                                                            <i class="fas fa-play"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-primary me-1" title="Ver detalles" onclick="viewCallDetails(1)">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-success manage-btn" title="Marcar como gestionado">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                            
                                            <!-- Llamada 2: Consulta -->
                                            <tr class="call-row" data-type="consultas" data-urgency="baja">
                                                <td class="px-3 py-2">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" id="call-managed-2" checked>
                                                        <label class="form-check-label" for="call-managed-2"></label>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex align-items-center">
                                                        <div class="bg-secondary rounded-circle me-2" style="width: 8px; height: 8px;"></div>
                                                        <div>
                                                            <div class="fw-medium">2024-02-19</div>
                                                            <small class="text-muted">16:20</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div>
                                                        <div class="fw-medium">+34 655 789 012</div>
                                                        <small class="text-muted">Cliente nuevo</small>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex flex-column">
                                                        <span class="badge bg-info mb-1">‚ùì CONSULTA</span>
                                                        <span class="badge bg-secondary">NORMAL</span>
                                                        <small class="text-muted mt-1">Confianza: 87%</small>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="fw-medium">Consulta sobre disponibilidad de pieles</div>
                                                    <small class="text-muted">Pregunta por disponibilidad de piel negra y marr√≥n para tapicer√≠a. Interesado en precios por metro cuadrado y tiempos de entrega est√°ndar.</small>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <span class="badge bg-primary">02:15</span>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex">
                                                        <button class="btn btn-sm btn-outline-secondary me-1 play-btn" title="Escuchar grabaci√≥n">
                                                            <i class="fas fa-play"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-primary me-1" title="Ver detalles" onclick="viewCallDetails(2)">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-danger" title="Desmarcar como gestionado" onclick="unmarkCallAsManaged(2)">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                            
                                            <!-- Llamada 3: Pedido -->
                                            <tr class="call-row" data-type="pedidos" data-urgency="media">
                                                <td class="px-3 py-2">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" id="call-managed-3">
                                                        <label class="form-check-label" for="call-managed-3"></label>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex align-items-center">
                                                        <div class="bg-warning rounded-circle me-2" style="width: 8px; height: 8px;"></div>
                                                        <div>
                                                            <div class="fw-medium">2024-02-19</div>
                                                            <small class="text-muted">10:05</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div>
                                                        <div class="fw-medium">+34 622 334 455</div>
                                                        <small class="text-muted">Cliente habitual</small>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex flex-column">
                                                        <span class="badge bg-success mb-1">üì¶ PEDIDO</span>
                                                        <span class="badge bg-warning">PRIORITARIO</span>
                                                        <small class="text-muted mt-1">Confianza: 92%</small>
                                                    </div>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="fw-medium">Pedido de 50m2 de piel marr√≥n</div>
                                                    <small class="text-muted">Cliente Juan P√©rez solicita 50m2 de piel marr√≥n oscuro para proyecto de restauraci√≥n. Necesita entrega en 3 semanas. Solicita presupuesto detallado.</small>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <span class="badge bg-primary">03:48</span>
                                                </td>
                                                <td class="px-3 py-2">
                                                    <div class="d-flex">
                                                        <button class="btn btn-sm btn-outline-secondary me-1 play-btn" title="Escuchar grabaci√≥n">
                                                            <i class="fas fa-play"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-primary me-1" title="Ver detalles" onclick="viewCallDetails(3)">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-success manage-btn" title="Marcar como gestionado">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
}

/**
 * Crear el contenido de la pesta√±a Gesti√≥n de Emails
 * @returns {string} HTML de la pesta√±a
 */
function createEmailsTabContent() {
    return `
        <!-- 2. Gesti√≥n de Emails -->
        <div class="tab-pane" id="emails-content" role="tabpanel" aria-labelledby="emails-tab" tabindex="0">
            <div class="container-fluid pt-2 pb-0">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white border-bottom-0 py-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-envelope me-2"></i>Gesti√≥n de Emails <span class="badge bg-primary ms-2" id="email-count">0</span></h5>
                            <div>
                                <button class="btn btn-success btn-sm me-2" id="classify-emails-btn">
                                    <i class="fas fa-robot me-2"></i>Clasificar con IA
                                </button>
                                <button class="btn btn-primary btn-sm" id="refresh-emails-btn">
                                    <i class="fas fa-sync me-2"></i>Actualizar
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <!-- Filtros de emails -->
                        <div class="p-3 border-bottom">
                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <input type="radio" class="btn-check" name="email-filter" id="filter-all" autocomplete="off" checked>
                                        <label class="btn btn-outline-primary" for="filter-all">Todos</label>
                                        
                                        <input type="radio" class="btn-check" name="email-filter" id="filter-unread" autocomplete="off">
                                        <label class="btn btn-outline-primary" for="filter-unread">No le√≠dos</label>
                                        
                                        <input type="radio" class="btn-check" name="email-filter" id="filter-important" autocomplete="off">
                                        <label class="btn btn-outline-primary" for="filter-important">Importantes</label>
                                        
                                        <input type="radio" class="btn-check" name="email-filter" id="filter-spam" autocomplete="off">
                                        <label class="btn btn-outline-primary" for="filter-spam">Spam</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group input-group-sm">
                                        <input type="text" class="form-control" placeholder="Buscar emails...">
                                        <button class="btn btn-outline-secondary" type="button">
                                            <i class="fas fa-search"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Lista de emails -->
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 5%"><i class="fas fa-star"></i></th>
                                        <th style="width: 25%">Remitente</th>
                                        <th style="width: 45%">Asunto</th>
                                        <th style="width: 15%">Fecha</th>
                                        <th style="width: 10%">Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Email 1 - No le√≠do, importante -->
                                    <tr class="email-row fw-bold" data-type="unread important">
                                        <td><i class="fas fa-star text-warning"></i></td>
                                        <td>Juan P√©rez <span class="badge bg-primary ms-1">Cliente</span></td>
                                        <td>
                                            <i class="fas fa-circle text-primary me-1" style="font-size: 8px;"></i>
                                            Consulta sobre productos premium
                                        </td>
                                        <td>Hoy, 10:25</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="showAutoReplyModal(1, 'ai')" title="Responder con IA">
                                                    <i class="fas fa-robot"></i>
                                                </button>
                                                <button class="btn btn-outline-secondary" onclick="showAutoReplyModal(1, 'manual')" title="Responder manual">
                                                    <i class="fas fa-reply"></i>
                                                </button>
                                                <button class="btn btn-outline-info" onclick="viewEmailHistory(1)" title="Ver historial">
                                                    <i class="fas fa-history"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    
                                    <!-- Email 2 - Le√≠do -->
                                    <tr class="email-row" data-type="read">
                                        <td><i class="far fa-star text-muted"></i></td>
                                        <td>Mar√≠a G√≥mez</td>
                                        <td>Solicitud de informaci√≥n adicional</td>
                                        <td>Ayer, 15:40</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="showAutoReplyModal(2, 'ai')" title="Responder con IA">
                                                    <i class="fas fa-robot"></i>
                                                </button>
                                                <button class="btn btn-outline-secondary" onclick="showAutoReplyModal(2, 'manual')" title="Responder manual">
                                                    <i class="fas fa-reply"></i>
                                                </button>
                                                <button class="btn btn-outline-info" onclick="viewEmailHistory(2)" title="Ver historial">
                                                    <i class="fas fa-history"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    
                                    <!-- Email 3 - Spam -->
                                    <tr class="email-row" data-type="spam">
                                        <td><i class="far fa-star text-muted"></i></td>
                                        <td>marketing@ofertas.com <span class="badge bg-danger ms-1">Spam</span></td>
                                        <td>¬°¬°¬°Oferta especial solo por hoy!!!</td>
                                        <td>15/05/2023</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="showAutoReplyModal(3, 'ai')" title="Responder con IA">
                                                    <i class="fas fa-robot"></i>
                                                </button>
                                                <button class="btn btn-outline-secondary" onclick="showAutoReplyModal(3, 'manual')" title="Responder manual">
                                                    <i class="fas fa-reply"></i>
                                                </button>
                                                <button class="btn btn-outline-info" onclick="viewEmailHistory(3)" title="Ver historial">
                                                    <i class="fas fa-history"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    
                                    <!-- Email 4 - No le√≠do -->
                                    <tr class="email-row fw-bold" data-type="unread">
                                        <td><i class="far fa-star text-muted"></i></td>
                                        <td>Carlos Rodr√≠guez <span class="badge bg-success ms-1">Nuevo</span></td>
                                        <td>
                                            <i class="fas fa-circle text-primary me-1" style="font-size: 8px;"></i>
                                            Solicitud de presupuesto
                                        </td>
                                        <td>14/05/2023</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="showAutoReplyModal(4, 'ai')" title="Responder con IA">
                                                    <i class="fas fa-robot"></i>
                                                </button>
                                                <button class="btn btn-outline-secondary" onclick="showAutoReplyModal(4, 'manual')" title="Responder manual">
                                                    <i class="fas fa-reply"></i>
                                                </button>
                                                <button class="btn btn-outline-info" onclick="viewEmailHistory(4)" title="Ver historial">
                                                    <i class="fas fa-history"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    
                                    <!-- Email 5 - Importante -->
                                    <tr class="email-row" data-type="important">
                                        <td><i class="fas fa-star text-warning"></i></td>
                                        <td>Ana Mart√≠nez <span class="badge bg-warning text-dark ms-1">Urgente</span></td>
                                        <td>Problema con el pedido #12345</td>
                                        <td>10/05/2023</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="showAutoReplyModal(5, 'ai')" title="Responder con IA">
                                                    <i class="fas fa-robot"></i>
                                                </button>
                                                <button class="btn btn-outline-secondary" onclick="showAutoReplyModal(5, 'manual')" title="Responder manual">
                                                    <i class="fas fa-reply"></i>
                                                </button>
                                                <button class="btn btn-outline-info" onclick="viewEmailHistory(5)" title="Ver historial">
                                                    <i class="fas fa-history"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        
                        <!-- Paginaci√≥n -->
                        <div class="d-flex justify-content-between align-items-center p-3 border-top">
                            <div>
                                <small class="text-muted">Mostrando 5 de 42 emails</small>
                            </div>
                            <nav aria-label="Page navigation">
                                <ul class="pagination pagination-sm mb-0">
                                    <li class="page-item disabled">
                                        <a class="page-link" href="#" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>
                                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                                    <li class="page-item">
                                        <a class="page-link" href="#" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
}

/**
 * Crear el contenido de la pesta√±a Configuraci√≥n del Bot
 * @returns {string} HTML de la pesta√±a
 */
function createBotConfigTabContent() {
    return `
        <!-- 3. Configuraci√≥n del Bot -->
        <div class="tab-pane" id="call-bot-content" role="tabpanel" aria-labelledby="call-bot-tab" tabindex="0">
            <div class="container-fluid pt-2 pb-0">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white border-bottom-0 py-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-robot me-2"></i>Configuraci√≥n del Bot</h5>
                            <div>
                                <button class="btn btn-outline-secondary btn-sm me-2" id="test-bot-btn">
                                    <i class="fas fa-vial me-2"></i>Probar Bot
                                </button>
                                <button class="btn btn-primary btn-sm" id="save-bot-config-btn">
                                    <i class="fas fa-save me-2"></i>Guardar
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <!-- Contenido de Configuraci√≥n del Bot -->
                        <p class="p-3">Contenido de la pesta√±a Configuraci√≥n del Bot en desarrollo...</p>
                    </div>
                </div>
            </div>
        </div>
    `;
}

/**
 * Crear el contenido de la pesta√±a Mi Cuenta
 * @returns {string} HTML de la pesta√±a
 */
function createAccountTabContent() {
    return `
        <!-- 4. Mi Cuenta -->
        <div class="tab-pane" id="account-content" role="tabpanel" aria-labelledby="account-tab" tabindex="0">
            <div class="container-fluid pt-2 pb-0">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white border-bottom-0 py-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-user-cog me-2"></i>Mi Cuenta</h5>
                            <button class="btn btn-primary btn-sm" id="save-account-btn">
                                <i class="fas fa-save me-2"></i>Guardar Cambios
                            </button>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <!-- Contenido de Mi Cuenta -->
                        <p class="p-3">Contenido de la pesta√±a Mi Cuenta en desarrollo...</p>
                    </div>
                </div>
            </div>
        </div>
    `;
}

/**
 * Crear el contenido de la pesta√±a Facturaci√≥n
 * @returns {string} HTML de la pesta√±a
 */
function createBillingTabContent() {
    return `
        <!-- 5. Facturaci√≥n -->
        <div class="tab-pane" id="billing-content" role="tabpanel" aria-labelledby="billing-tab" tabindex="0">
            <div class="container-fluid pt-2 pb-0">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white border-bottom-0 py-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-credit-card me-2"></i>Facturaci√≥n</h5>
                            <button class="btn btn-outline-primary btn-sm" id="view-invoices-btn">
                                <i class="fas fa-file-invoice-dollar me-2"></i>Ver Facturas
                            </button>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <!-- Contenido de Facturaci√≥n -->
                        <p class="p-3">Contenido de la pesta√±a Facturaci√≥n en desarrollo...</p>
                    </div>
                </div>
            </div>
        </div>
    `;
}

/**
 * Crear el contenido de las pesta√±as con nueva estructura simplificada
 */
function createTabsContent() {
    console.log('üìÑ Creando contenido de las pesta√±as...');
    
    const tabsContentContainer = document.getElementById('dashboardTabContent');
    if (!tabsContentContainer) {
        console.error('‚ùå No se encontr√≥ el contenedor de contenido');
        return;
    }
    
    // Asegurar que los estilos est√©n cargados
    addDashboardStyles();
    
    // Crear contenido usando funciones modulares
    tabsContentContainer.innerHTML = `
        ${createCallsTabContent()}
        ${createEmailsTabContent()}
        ${createBotConfigTabContent()}
        ${createAccountTabContent()}
        ${createBillingTabContent()}
    `;
    
    console.log('‚úÖ Contenido de pesta√±as creado');
}

/**
 * Cargar datos iniciales para el dashboard
 * @param {Object} config - Configuraci√≥n de la empresa
 */
function loadSimpleData(config) {
    console.log('üìä Cargando datos iniciales para el dashboard...');
    
    // Esta funci√≥n ya no es necesaria porque los datos est√°n directamente en el HTML
    // Los datos de ejemplo est√°n integrados en createTabsContent() para mejor rendimiento
    
    console.log('‚úÖ Datos iniciales cargados desde HTML est√°tico');
}

/**
 * Filtrar llamadas por tipo o urgencia
 */
function filterCalls(type) {
    console.log(`üîç Filtrando llamadas por tipo: ${type}`);
    // Implementaci√≥n de filtrado
}

/**
 * Reproducir grabaci√≥n de llamada
 * @param {number} callId - ID de la llamada
 */
function playCallRecording(callId) {
    console.log(`‚ñ∂Ô∏è Reproduciendo grabaci√≥n de llamada ID: ${callId}`);
    // Implementaci√≥n de reproducci√≥n
}

/**
 * Marcar llamada como gestionada
 * @param {number} callId - ID de la llamada
 */
function markCallAsManaged(callId) {
    console.log(`‚úÖ Marcando llamada como gestionada ID: ${callId}`);
    // Implementaci√≥n de marcar como gestionada
}

/**
 * Ver detalles de llamada
 * @param {number} callId - ID de la llamada
 */
function viewCallDetails(callId) {
    console.log(`üëÅÔ∏è Ver detalles de llamada ID: ${callId}`);
    // Implementaci√≥n de ver detalles
}

/**
 * Configurar event listeners para el dashboard
 */
function setupEventListeners() {
    console.log('üëÇ Configurando event listeners para el dashboard...');
    
    // Event listeners para botones de actualizar
    document.addEventListener('click', function(e) {
        // Event listener para botones de filtro de llamadas
        if (e.target.matches('input[name="call-filter"]')) {
            const filterType = e.target.id.replace('filter-calls-', '');
            filterCalls(filterType);
        }
        
        // Event listener para botones de reproducir llamadas
        if (e.target.matches('.play-btn') || e.target.closest('.play-btn')) {
            const btn = e.target.matches('.play-btn') ? e.target : e.target.closest('.play-btn');
            const callId = btn.getAttribute('onclick')?.match(/\d+/)?.[0];
            if (callId) {
                playCallRecording(parseInt(callId));
            }
        }
        
        // Event listener para botones de marcar como gestionado
        if (e.target.matches('.manage-btn') || e.target.closest('.manage-btn')) {
            const btn = e.target.matches('.manage-btn') ? e.target : e.target.closest('.manage-btn');
            const callId = btn.getAttribute('onclick')?.match(/\d+/)?.[0];
            if (callId) {
                markCallAsManaged(parseInt(callId));
            }
        }
        
        // Event listener para botones de actualizar datos
        if (e.target.matches('.refresh-btn') || e.target.closest('.refresh-btn')) {
            refreshDashboardData();
        }
    });
    
    console.log('‚úÖ Event listeners configurados');
}

/**
 * Actualizar datos del dashboard
 */
function refreshDashboardData() {
    console.log('üîÑ Actualizando datos del dashboard...');
    // Implementaci√≥n de actualizaci√≥n de datos
    
    // Mostrar notificaci√≥n
    toastr.info('Actualizando datos...', 'Actualizaci√≥n');
    
    // Simular actualizaci√≥n
    setTimeout(() => {
        toastr.success('Datos actualizados correctamente', '√âxito');
        updateCallsCount();
    }, 1500);
}

/**
 * Cargar datos existentes del dashboard
 */
function loadExistingData() {
    console.log('üì• Cargando datos existentes...');
    
    // Datos de ejemplo (en producci√≥n vendr√≠an de la API)
    const existingData = {
        company_name: 'TechSolutions S.L.',
        contact_email: 'info@techsolutions.com',
        main_phone: '+34 912 345 678',
        website: 'https://www.techsolutions.com',
        address: 'Calle Mayor 123, 28001 Madrid',
        industry: 'technology',
        primary_language: 'es',
        bot_personality: 'professional',
        timezone: 'Europe/Madrid',
        opening_time: '09:00',
        closing_time: '18:00',
        twilio_phone_number: '+34 900 123 456',
        welcome_message: 'Hola, gracias por llamar a TechSolutions. ¬øEn qu√© puedo ayudarte hoy?',
        incoming_email: 'soporte@techsolutions.com',
        notification_email: 'admin@techsolutions.com',
        check_frequency: '15',
        confidence_level: '0.8',
        response_tone: 'professional',
        email_signature: `Saludos cordiales,\nEquipo de TechSolutions\nTel: +34 912 345 678\nWeb: www.techsolutions.com`,
        working_days: {
            monday: true,
            tuesday: true,
            wednesday: true,
            thursday: true,
            friday: true,
            saturday: false,
            sunday: false
        },
        auto_priority: true,
        include_context: true,
        auto_classify: true,
        require_approval: false,
        notify_urgent: true,
        daily_summary: true
    };
    
    // Llenar campos del formulario
    Object.keys(existingData).forEach(key => {
        if (key === 'working_days') {
            Object.keys(existingData.working_days).forEach(day => {
                const checkbox = document.getElementById(day);
                if (checkbox) {
                    checkbox.checked = existingData.working_days[day];
                }
            });
        } else {
            const element = document.getElementById(key);
            if (element) {
                if (element.type === 'checkbox') {
                    element.checked = existingData[key];
                } else {
                    element.value = existingData[key];
                }
            }
        }
    });
    
    // Actualizar contadores
    updateCallsCount();
    
    toastr.success('Datos cargados correctamente', 'Datos Existentes');
    console.log('‚úÖ Datos existentes cargados');
}

/**
 * Configurar funcionalidades adicionales
 */
function setupAdditionalFeatures() {
    console.log('üíª Configurando funcionalidades adicionales...');
    
    // Configurar bot√≥n de logout
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
        logoutBtn.addEventListener('click', function() {
            console.log('üö™ Cerrando sesi√≥n...');
            // L√≥gica de cierre de sesi√≥n
        });
    }
    
    // Configurar toggle sidebar
    const sidebarToggle = document.getElementById('sidebarToggle');
    if (sidebarToggle) {
        sidebarToggle.addEventListener('click', function() {
            document.body.classList.toggle('sb-sidenav-toggled');
        });
    }
    
    // Configurar botones de la pesta√±a de emails
    setupEmailFeatures();
    
    // Configurar funcionalidades de la pesta√±a de configuraci√≥n
    setupConfigFeatures();
    
    console.log('‚úÖ Funcionalidades adicionales configuradas');
}

/**
 * Actualizar contador de llamadas
 */
function updateCallsCount() {
    const callsCountElement = document.getElementById('calls-count');
    if (callsCountElement) {
        const callRows = document.querySelectorAll('.call-row:not(.d-none)');
        callsCountElement.textContent = callRows.length;
    }
}

/**
 * Configurar funcionalidades espec√≠ficas de emails
 */
function setupEmailFeatures() {
    console.log('üìß Configurando funcionalidades de emails...');
    
    // Bot√≥n para clasificar emails
    const classifyEmailsBtn = document.getElementById('classify-emails-btn');
    if (classifyEmailsBtn) {
        classifyEmailsBtn.addEventListener('click', function() {
            console.log('ü§ñ Clasificando emails con IA...');
            toastr.info('Clasificando emails...', 'Procesando');
            
            // Simular procesamiento
            setTimeout(() => {
                toastr.success('Emails clasificados correctamente', '√âxito');
            }, 2000);
        });
    }
    
    // Bot√≥n para refrescar emails
    const refreshEmailsBtn = document.getElementById('refresh-emails-btn');
    if (refreshEmailsBtn) {
        refreshEmailsBtn.addEventListener('click', function() {
            console.log('üîÑ Actualizando bandeja de emails...');
            toastr.info('Actualizando bandeja de entrada...', 'Procesando');
            
            // Simular actualizaci√≥n
            setTimeout(() => {
                toastr.success('Bandeja actualizada correctamente', '√âxito');
            }, 1500);
        });
    }
    
    // Configurar filtros de emails
    const emailFilters = document.querySelectorAll('input[name="email-filter"]');
    emailFilters.forEach(filter => {
        filter.addEventListener('change', function() {
            filterEmails(this.id.replace('filter-', ''));
        });
    });
    
    // A√±adir bot√≥n de preview a la firma de email
    addEmailPreviewButton();
    
    console.log('‚úÖ Funcionalidades de emails configuradas');
}

/**
 * Filtrar emails por tipo
 * @param {string} type - Tipo de filtro
 */
function filterEmails(type) {
    console.log(`üîç Filtrando emails por: ${type}`);
    toastr.info(`Mostrando emails de tipo: ${type}`, 'Filtro aplicado');
    
    // Implementaci√≥n de filtrado
    const emailRows = document.querySelectorAll('.email-row');
    
    emailRows.forEach(row => {
        if (type === 'all') {
            row.classList.remove('d-none');
        } else {
            if (row.dataset.type === type) {
                row.classList.remove('d-none');
            } else {
                row.classList.add('d-none');
            }
        }
    });
    
    // Actualizar contador
    const emailCount = document.getElementById('email-count');
    if (emailCount) {
        const visibleRows = document.querySelectorAll('.email-row:not(.d-none)');
        emailCount.textContent = visibleRows.length;
    }
}

/**
 * Marcar email como le√≠do
 * @param {number} emailId - ID del email
 */
function markAsRead(emailId) {
    console.log(`üëÅÔ∏è Marcando email ${emailId} como le√≠do`);
    toastr.success(`Email ${emailId} marcado como le√≠do`, 'Actualizado');
}

/**
 * Mostrar modal para respuesta autom√°tica
 * @param {number} emailId - ID del email
 * @param {string} mode - Modo de respuesta (ai o manual)
 */
function showAutoReplyModal(emailId, mode) {
    console.log(`üí¨ Mostrando modal de respuesta para email ${emailId} en modo ${mode}`);
    
    const modalTitle = mode === 'ai' ? 'Respuesta Autom√°tica IA' : 'Respuesta Manual';
    const modalContent = mode === 'ai' ? 
        'La IA est√° generando una respuesta personalizada basada en el contenido del email y el historial del cliente...' : 
        'Editor para redactar una respuesta manual al email seleccionado.';
    
    // Crear modal din√°micamente
    const modalHTML = `
        <div class="modal fade" id="replyModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">
                            ${mode === 'ai' ? '<i class="fas fa-robot me-2"></i>' : '<i class="fas fa-edit me-2"></i>'}
                            ${modalTitle} - Email #${emailId}
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        ${mode === 'ai' ? 
                            `<div class="d-flex align-items-center mb-3">
                                <div class="spinner-border text-primary me-3" role="status"></div>
                                <span>Generando respuesta con IA...</span>
                            </div>
                            <div class="progress mb-3">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: 75%"></div>
                            </div>` : 
                            `<div class="form-group mb-3">
                                <label class="form-label">Asunto</label>
                                <input type="text" class="form-control" value="RE: Consulta sobre productos">
                            </div>
                            <div class="form-group mb-3">
                                <label class="form-label">Contenido</label>
                                <textarea class="form-control" rows="8">Estimado cliente,

Gracias por contactar con nosotros.

[Escriba aqu√≠ su respuesta]

Saludos cordiales,
Equipo de Atenci√≥n al Cliente</textarea>
                            </div>`
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        ${mode === 'ai' ? 
                            `<button type="button" class="btn btn-primary" disabled>Enviar Respuesta</button>` : 
                            `<button type="button" class="btn btn-primary">Enviar Respuesta</button>`
                        }
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // Eliminar modal existente si hay uno
    const existingModal = document.getElementById('replyModal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // A√±adir modal al DOM
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    
    // Mostrar modal
    const modal = new bootstrap.Modal(document.getElementById('replyModal'));
    modal.show();
    
    // Si es modo IA, simular generaci√≥n de respuesta
    if (mode === 'ai') {
        setTimeout(() => {
            const modalBody = document.querySelector('#replyModal .modal-body');
            modalBody.innerHTML = `
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>
                    Respuesta generada correctamente
                </div>
                <div class="form-group mb-3">
                    <label class="form-label">Asunto</label>
                    <input type="text" class="form-control" value="RE: Consulta sobre productos">
                </div>
                <div class="form-group mb-3">
                    <label class="form-label">Respuesta generada por IA</label>
                    <textarea class="form-control" rows="8">Estimado cliente,

Gracias por contactar con nosotros. En respuesta a su consulta sobre nuestros productos, me complace informarle que disponemos de una amplia gama de opciones que podr√≠an ajustarse a sus necesidades.

Basado en su inter√©s, le recomendar√≠a revisar nuestro cat√°logo adjunto donde encontrar√° informaci√≥n detallada sobre especificaciones, precios y disponibilidad.

Si necesita informaci√≥n adicional o tiene alguna otra pregunta, no dude en contactarnos nuevamente.

Saludos cordiales,
Equipo de Atenci√≥n al Cliente</textarea>
                </div>
            `;
            
            // Habilitar bot√≥n de enviar
            document.querySelector('#replyModal .btn-primary').disabled = false;
        }, 3000);
    }
    
    // Configurar bot√≥n de enviar
    setTimeout(() => {
        const sendButton = document.querySelector('#replyModal .btn-primary');
        if (sendButton) {
            sendButton.addEventListener('click', function() {
                toastr.success(`Respuesta enviada al email ${emailId}`, '√âxito');
                modal.hide();
            });
        }
    }, 500);
}

/**
 * Ver historial de email
 * @param {number} emailId - ID del email
 */
function viewEmailHistory(emailId) {
    console.log(`üìú Viendo historial del email ${emailId}`);
    toastr.info(`Mostrando historial del email ${emailId}`, 'Historial');
}

/**
 * Ver reporte de llamada
 * @param {number} reportId - ID del reporte
 */
function viewCallReport(reportId) {
    console.log(`üìû Viendo reporte de llamada ${reportId}`);
    toastr.info(`Mostrando reporte de llamada ${reportId}`, 'Reporte');
}

/**
 * Configurar funcionalidades de la pesta√±a de configuraci√≥n
 */
function setupConfigFeatures() {
    console.log('‚öôÔ∏è Configurando funcionalidades de configuraci√≥n...');
    
    // Bot√≥n para ir a la pesta√±a de configuraci√≥n
    const goToConfigBtn = document.getElementById('go-to-config-tab');
    if (goToConfigBtn) {
        goToConfigBtn.addEventListener('click', function() {
            // Activar la pesta√±a de configuraci√≥n
            const configTab = document.getElementById('call-bot-tab');
            if (configTab) {
                const tab = new bootstrap.Tab(configTab);
                tab.show();
            }
        });
    }
    
    // Validaci√≥n de formularios
    setupFormValidation();
    
    console.log('‚úÖ Funcionalidades de configuraci√≥n configuradas');
}

/**
 * Configurar validaci√≥n de formularios
 */
function setupFormValidation() {
    // Seleccionar todos los formularios que necesitan validaci√≥n
    const forms = document.querySelectorAll('.needs-validation');
    
    // Iterar sobre ellos y prevenir env√≠o si no son v√°lidos
    Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
                toastr.error('Por favor, complete todos los campos requeridos', 'Error de validaci√≥n');
            } else {
                // Si el formulario es v√°lido, mostrar mensaje de √©xito
                toastr.success('Configuraci√≥n guardada correctamente', '√âxito');
            }
            
            form.classList.add('was-validated');
        }, false);
    });
    
    // Validar campos de email
    const emailFields = document.querySelectorAll('input[type="email"]');
    emailFields.forEach(field => {
        field.addEventListener('blur', function() {
            if (field.value && !isValidEmail(field.value)) {
                field.classList.add('is-invalid');
                field.nextElementSibling?.classList.add('d-block');
            } else if (field.value) {
                field.classList.remove('is-invalid');
                field.classList.add('is-valid');
                field.nextElementSibling?.classList.remove('d-block');
            }
        });
    });
}

/**
 * Validar formato de email
 * @param {string} email - Email a validar
 * @returns {boolean} - True si el email es v√°lido
 */
function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

/**
 * Previsualizar plantilla de email
 */
function previewEmailTemplate() {
    const signature = document.getElementById('email_signature')?.value || '';
    const companyName = document.getElementById('company_name')?.value || 'Tu Empresa';
    
    // Reemplazar variables en la firma
    const processedSignature = signature
        .replace(/{EMPRESA}/g, companyName)
        .replace(/\n/g, '\n');
    
    const modalHTML = `
        <div class="modal fade" id="emailPreviewModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">
                            <i class="fas fa-eye me-2"></i>Preview de Email
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="card">
                            <div class="card-header bg-light">
                                <strong>De:</strong> soporte@${companyName.toLowerCase().replace(/\s+/g, '')}.com<br>
                                <strong>Para:</strong> cliente@ejemplo.com<br>
                                <strong>Asunto:</strong> Re: Consulta sobre productos
                            </div>
                            <div class="card-body">
                                <p>Estimado/a Juan P√©rez,</p>
                                <p>Gracias por contactar con nosotros. Hemos recibido su consulta sobre nuestros productos y servicios.</p>
                                <p>[Aqu√≠ ir√≠a la respuesta generada por IA basada en el contexto del email]</p>
                                <hr>
                                <pre style="font-family: inherit; white-space: pre-wrap;">${processedSignature}</pre>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // Remover modal existente si existe
    const existingModal = document.getElementById('emailPreviewModal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // Agregar nuevo modal
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    
    // Mostrar modal
    const modal = new bootstrap.Modal(document.getElementById('emailPreviewModal'));
    modal.show();
}

/**
 * Agregar bot√≥n de preview a la firma
 */
document.addEventListener('DOMContentLoaded', function() {
    // Agregar bot√≥n de preview despu√©s del textarea de firma
    setTimeout(() => {
        const signatureTextarea = document.getElementById('email_signature');
        if (signatureTextarea && !document.getElementById('preview-signature-btn')) {
            const previewButton = document.createElement('button');
            previewButton.type = 'button';
            previewButton.id = 'preview-signature-btn';
            previewButton.className = 'btn btn-outline-secondary btn-sm mt-2';
            previewButton.innerHTML = '<i class="fas fa-eye me-1"></i>Preview Email';
            previewButton.onclick = previewEmailTemplate;
            
            signatureTextarea.parentNode.appendChild(previewButton);
        }
    }, 1000);
});

/**
 * Configurar event listeners espec√≠ficos para las pesta√±as
 */
function setupTabEventListeners() {
    console.log('üîß Configurando event listeners para pesta√±as Bootstrap nativas...');
    
    // Inicializar expl√≠citamente las pesta√±as de Bootstrap para evitar errores de invocaci√≥n
    try {
        // Inicializar todas las pesta√±as manualmente
        document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tabEl => {
            // Crear una nueva instancia de Tab para cada elemento
            new bootstrap.Tab(tabEl);
        });
        
        // Activar la primera pesta√±a expl√≠citamente
        const firstTab = document.querySelector('#calls-tab');
        if (firstTab) {
            const bsTab = new bootstrap.Tab(firstTab);
            bsTab.show();
        }
        
        console.log('‚úÖ Pesta√±as Bootstrap inicializadas correctamente');
    } catch (error) {
        console.error('‚ùå Error al inicializar pesta√±as Bootstrap:', error);
    }
    
    // Configurar event listeners para las pesta√±as
    const tabButtons = document.querySelectorAll('[data-bs-toggle="tab"]');
    
    tabButtons.forEach(button => {
        // Event listener para notificaciones (opcional)
        button.addEventListener('shown.bs.tab', function(e) {
            const targetId = this.getAttribute('data-bs-target');
            const tabName = this.textContent.trim();
            
            console.log(`üìå Pesta√±a activada: ${tabName}`);
            
            // Si es la pesta√±a de llamadas, actualizar contador
            if (targetId === '#calls-content') {
                updateCallsCount();
            }
            
            // Si es la pesta√±a de emails, actualizar contador
            if (targetId === '#emails-content') {
                const emailCount = document.getElementById('email-count');
                if (emailCount) {
                    const visibleRows = document.querySelectorAll('.email-row:not(.d-none)');
                    emailCount.textContent = visibleRows.length;
                }
            }
        });
    });
    
    console.log('‚úÖ Event listeners para pesta√±as configurados');
}

/**
 * Cargar datos del usuario
 */
function loadUserData() {
    console.log('üë§ Cargando datos del usuario...');
    
    if (typeof authService !== 'undefined') {
        authService.getCurrentUser()
            .then(userData => {
                updateUserUI(userData);
            })
            .catch(error => {
                console.error('Error cargando datos del usuario:', error);
                loadDefaultUserData();
            });
    } else {
        // Cargar datos por defecto si no hay authService
        loadDefaultUserData();
    }
}

/**
 * Cargar datos de usuario por defecto
 */
function loadDefaultUserData() {
    console.log('üë§ Cargando datos de usuario por defecto...');
    
    const userData = {
        name: 'Usuario Demo',
        email: 'demo@ejemplo.com',
        company: 'Empresa Demo',
        role: 'Administrador',
        avatar: 'assets/img/avatar-default.png'
    };
    
    updateUserUI(userData);
}

/**
 * Actualizar UI con datos del usuario
 * @param {Object} userData - Datos del usuario
 */
function updateUserUI(userData) {
    // Actualizar nombre de usuario en la barra superior
    const userNameEl = document.getElementById('user-name');
    if (userNameEl) {
        userNameEl.textContent = userData.name || 'Usuario';
    }
    
    // Actualizar avatar
    const userAvatarEl = document.getElementById('user-avatar');
    if (userAvatarEl) {
        userAvatarEl.src = userData.avatar || 'assets/img/avatar-default.png';
    }
    
    // Actualizar campos en la pesta√±a de cuenta
    const userEmailEl = document.getElementById('user-email');
    if (userEmailEl) {
        userEmailEl.value = userData.email || '';
    }
    
    const userCompanyEl = document.getElementById('company_name');
    if (userCompanyEl) {
        userCompanyEl.value = userData.company || '';
    }
    
    console.log('‚úÖ UI de usuario actualizada');
}

/**
 * Cambiar estado del bot (activar/desactivar)
 * @param {boolean} isActive - Estado del bot (true: activo, false: inactivo)
 */
function toggleBotStatus(isActive) {
    console.log(`ü§ñ ${isActive ? 'Activando' : 'Desactivando'} bot...`);
    
    const statusText = document.getElementById('bot-status-text');
    const masterSwitch = document.getElementById('bot-master-switch');
    const configForm = document.getElementById('call-bot-config-form');
    
    // Si se est√° desactivando, mostrar advertencia sobre redirecci√≥n telef√≥nica
    if (!isActive) {
        showPhoneRedirectionWarning(() => {
            performBotDeactivation(statusText, masterSwitch, configForm);
        }, () => {
            // Cancelar desactivaci√≥n - volver a activar el switch
            masterSwitch.checked = true;
        });
        return;
    }
    
    if (isActive) {
        // Bot activado
        statusText.textContent = 'Bot Activo';
        statusText.className = 'me-3 fw-medium text-success';
        masterSwitch.checked = true;
        
        // Habilitar formulario de configuraci√≥n
        if (configForm) {
            const inputs = configForm.querySelectorAll('input, select, textarea');
            inputs.forEach(input => {
                input.disabled = false;
            });
            configForm.style.opacity = '1';
        }
        
        // Guardar estado en localStorage
        localStorage.setItem('botStatus', 'active');
        
        toastr.success('üöÄ Bot activado correctamente', 'Bot Activo');
    }
    
    // Simular llamada al backend para actualizar estado
    updateBotStatusOnServer(isActive);
}

/**
 * Realizar la desactivaci√≥n del bot
 * @param {HTMLElement} statusText - Elemento de texto de estado
 * @param {HTMLElement} masterSwitch - Switch principal
 * @param {HTMLElement} configForm - Formulario de configuraci√≥n
 */
function performBotDeactivation(statusText, masterSwitch, configForm) {
    console.log('üö´ Procediendo con desactivaci√≥n del bot...');
    
    // Bot desactivado
    statusText.textContent = 'Bot Inactivo';
    statusText.className = 'me-3 fw-medium text-danger';
    masterSwitch.checked = false;
    
    // Deshabilitar formulario de configuraci√≥n
    if (configForm) {
        const inputs = configForm.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            if (input.id !== 'bot-master-switch') {
                input.disabled = true;
            }
        });
        configForm.style.opacity = '0.6';
    }
    
    // Guardar estado en localStorage
    localStorage.setItem('botStatus', 'inactive');
    
    toastr.warning('‚ö†Ô∏è Bot desactivado. Recuerda contactar a tu operador para desactivar la redirecci√≥n telef√≥nica', 'Bot Inactivo');
    
    // Simular llamada al backend para actualizar estado
    updateBotStatusOnServer(false);
}

/**
 * Mostrar advertencia sobre redirecci√≥n telef√≥nica al desactivar bot
 * @param {Function} onConfirm - Callback al confirmar
 * @param {Function} onCancel - Callback al cancelar
 */
function showPhoneRedirectionWarning(onConfirm, onCancel) {
    // Crear modal de advertencia
    const modalHtml = `
        <div class="modal fade" id="phoneRedirectionWarningModal" tabindex="-1" aria-labelledby="phoneRedirectionWarningModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content border-0 shadow">
                    <div class="modal-header bg-warning text-dark border-0">
                        <h5 class="modal-title" id="phoneRedirectionWarningModalLabel">
                            <i class="fas fa-exclamation-triangle me-2"></i>Advertencia: Redirecci√≥n Telef√≥nica
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body py-4">
                        <div class="alert alert-warning border-0 mb-4">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Informaci√≥n importante sobre la redirecci√≥n de llamadas</strong>
                        </div>
                        
                        <div class="mb-4">
                            <h6 class="fw-bold mb-3">üìû ¬øC√≥mo funciona actualmente?</h6>
                            <p class="mb-2">Tu n√∫mero principal est√° redirigido autom√°ticamente a nuestro sistema Twilio para que el bot de IA pueda atender las llamadas.</p>
                        </div>
                        
                        <div class="mb-4">
                            <h6 class="fw-bold mb-3 text-danger">‚ö†Ô∏è ¬øQu√© pasa si desactivas el bot?</h6>
                            <ul class="list-unstyled">
                                <li class="mb-2"><i class="fas fa-times-circle text-danger me-2"></i>El bot dejar√° de procesar llamadas</li>
                                <li class="mb-2"><i class="fas fa-phone text-warning me-2"></i>Las llamadas seguir√°n redirigidas a Twilio</li>
                                <li class="mb-2"><i class="fas fa-user-tie text-info me-2"></i><strong>Necesitar√°s contactar a tu operador telef√≥nico</strong> para desactivar la redirecci√≥n manualmente</li>
                            </ul>
                        </div>
                        
                        <div class="bg-light p-3 rounded">
                            <h6 class="fw-bold mb-2">üìû Contacta a tu operador:</h6>
                            <p class="mb-1 small">Diles: <em>"Quiero desactivar la redirecci√≥n de llamadas de mi n√∫mero principal"</em></p>
                            <p class="mb-0 small text-muted">Tendr√°s que proporcionar tu n√∫mero principal y posiblemente verificar tu identidad.</p>
                        </div>
                    </div>
                    <div class="modal-footer border-0 pt-0">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" id="cancelDeactivation">
                            <i class="fas fa-times me-2"></i>Cancelar
                        </button>
                        <button type="button" class="btn btn-warning" id="confirmDeactivation">
                            <i class="fas fa-check me-2"></i>Entiendo, desactivar bot
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // Agregar modal al DOM
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    // Configurar event listeners
    const modal = new bootstrap.Modal(document.getElementById('phoneRedirectionWarningModal'));
    const confirmBtn = document.getElementById('confirmDeactivation');
    const cancelBtn = document.getElementById('cancelDeactivation');
    
    confirmBtn.addEventListener('click', () => {
        modal.hide();
        onConfirm();
    });
    
    cancelBtn.addEventListener('click', () => {
        modal.hide();
        onCancel();
    });
    
    // Limpiar modal al cerrarse
    document.getElementById('phoneRedirectionWarningModal').addEventListener('hidden.bs.modal', function() {
        this.remove();
    });
    
    // Mostrar modal
    modal.show();
}

/**
 * Actualizar estado del bot en el servidor
 * @param {boolean} isActive - Estado del bot
 */
async function updateBotStatusOnServer(isActive) {
    try {
        console.log(`üìû Actualizando estado del bot en servidor: ${isActive ? 'activo' : 'inactivo'}`);
        
        // En producci√≥n, esto ser√≠a una llamada real al backend
        // const response = await fetch('/api/bot/status', {
        //     method: 'POST',
        //     headers: {
        //         'Content-Type': 'application/json',
        //         'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
        //     },
        //     body: JSON.stringify({ active: isActive })
        // });
        
        // Simular respuesta exitosa
        setTimeout(() => {
            console.log('‚úÖ Estado del bot actualizado en servidor');
        }, 500);
        
    } catch (error) {
        console.error('‚ùå Error al actualizar estado del bot:', error);
        toastr.error('Error al actualizar estado del bot en servidor', 'Error');
    }
}

/**
 * Cargar estado inicial del bot desde localStorage
 */
function loadBotStatus() {
    const savedStatus = localStorage.getItem('botStatus');
    const isActive = savedStatus !== 'inactive'; // Por defecto activo
    
    const masterSwitch = document.getElementById('bot-master-switch');
    if (masterSwitch) {
        masterSwitch.checked = isActive;
        toggleBotStatus(isActive);
    }
}

/**
 * Enviar respuesta de email
 * @param {number} emailId - ID del email
 */
function sendEmailResponse(emailId) {
    console.log(`üì§ Enviando respuesta para email ${emailId}...`);
    
    // Simular env√≠o
    toastr.info('Enviando respuesta...', 'Procesando');
    
    setTimeout(() => {
        // Actualizar estado del email
        const emailRows = document.querySelectorAll('.email-row');
        const emailRow = emailRows[emailId - 1];
        
        if (emailRow) {
            const statusBadge = emailRow.querySelector('td:nth-child(5) .badge');
            if (statusBadge) {
                statusBadge.className = 'badge bg-primary';
                statusBadge.innerHTML = '‚úÖ Respondido';
            }
        }
        
        toastr.success('Respuesta enviada correctamente', '¬°Email Enviado!');
        
        // Cerrar modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('responseModal'));
        if (modal) modal.hide();
        
    }, 1000);
}

/**
 * Enviar respuesta manual
 * @param {number} emailId - ID del email
 */
function sendManualResponse(emailId) {
    const subject = document.getElementById('replySubject').value;
    const message = document.getElementById('manualResponse').value;
    
    if (!message.trim()) {
        toastr.error('Por favor, escriba un mensaje', 'Error');
        return;
    }
    
    console.log(`üì§ Enviando respuesta manual para email ${emailId}...`);
    toastr.info('Enviando respuesta...', 'Procesando');
    
    setTimeout(() => {
        // Actualizar estado
        const emailRows = document.querySelectorAll('.email-row');
        const emailRow = emailRows[emailId - 1];
        
        if (emailRow) {
            const statusBadge = emailRow.querySelector('td:nth-child(5) .badge');
            if (statusBadge) {
                statusBadge.className = 'badge bg-primary';
                statusBadge.innerHTML = '‚úÖ Respondido';
            }
        }
        
        toastr.success('Respuesta enviada correctamente', '¬°Email Enviado!');
        
        // Cerrar modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('manualReplyModal'));
        if (modal) modal.hide();
        
    }, 1000);
}

/**
 * Guardar configuraci√≥n unificada del bot
 */
function saveUnifiedConfig() {
    console.log('üíæ Guardando configuraci√≥n unificada del bot...');
    
    // Recopilar todos los datos del formulario
    const config = {
        // Datos de la empresa
        company_name: document.getElementById('company_name')?.value || '',
        contact_email: document.getElementById('contact_email')?.value || '',
        main_phone: document.getElementById('main_phone')?.value || '',
        website: document.getElementById('website')?.value || '',
        address: document.getElementById('address')?.value || '',
        industry: document.getElementById('industry')?.value || '',
        
        // Configuraci√≥n general
        primary_language: document.getElementById('primary_language')?.value || 'es',
        bot_personality: document.getElementById('bot_personality')?.value || 'professional',
        timezone: document.getElementById('timezone')?.value || 'Europe/Madrid',
        
        // Horarios (unificados)
        opening_time: document.getElementById('opening_time')?.value || '09:00',
        closing_time: document.getElementById('closing_time')?.value || '18:00',
        working_days: {
            monday: document.getElementById('monday')?.checked || false,
            tuesday: document.getElementById('tuesday')?.checked || false,
            wednesday: document.getElementById('wednesday')?.checked || false,
            thursday: document.getElementById('thursday')?.checked || false,
            friday: document.getElementById('friday')?.checked || false,
            saturday: document.getElementById('saturday')?.checked || false,
            sunday: document.getElementById('sunday')?.checked || false
        },
        
        // Configuraci√≥n de llamadas
        twilio_phone_number: document.getElementById('twilio_phone_number')?.value || '',
        welcome_message: document.getElementById('welcome_message')?.value || '',
        
        // Configuraci√≥n de emails
        incoming_email: document.getElementById('incoming_email')?.value || '',
        notification_email: document.getElementById('notification_email')?.value || '',
        check_frequency: parseInt(document.getElementById('check_frequency')?.value) || 15,
        confidence_level: parseFloat(document.getElementById('confidence_level')?.value) || 0.8,
        response_tone: document.getElementById('response_tone')?.value || 'professional',
        email_signature: document.getElementById('email_signature')?.value || '',
        
        // Configuraci√≥n avanzada de IA
        auto_priority: document.getElementById('auto_priority')?.checked || false,
        include_context: document.getElementById('include_context')?.checked || false,
        auto_classify: document.getElementById('auto_classify')?.checked || false,
        require_approval: document.getElementById('require_approval')?.checked || false,
        notify_urgent: document.getElementById('notify_urgent')?.checked || false,
        daily_summary: document.getElementById('daily_summary')?.checked || false,
        
        // Archivos de contexto
        files: {
            inventory: document.getElementById('inventory_file')?.files[0] || null,
            catalog: document.getElementById('catalog_file')?.files[0] || null,
            pricing: document.getElementById('pricing_file')?.files[0] || null,
            info: document.getElementById('info_file')?.files[0] || null
        }
    };
    
    // Validar campos requeridos
    const requiredFields = [
        { field: 'company_name', name: 'Nombre de la Empresa' },
        { field: 'contact_email', name: 'Email de Contacto' },
        { field: 'industry', name: 'Sector' }
    ];
    
    const missingFields = [];
    requiredFields.forEach(({ field, name }) => {
        if (!config[field] || config[field].trim() === '') {
            missingFields.push(name);
            document.getElementById(field)?.classList.add('is-invalid');
        } else {
            document.getElementById(field)?.classList.remove('is-invalid');
        }
    });
    
    // Validar formato de email
    const emailFields = ['contact_email', 'incoming_email', 'notification_email'];
    emailFields.forEach(field => {
        const value = config[field];
        if (value && !isValidEmail(value)) {
            missingFields.push(`Formato de ${field.replace('_', ' ')} inv√°lido`);
            document.getElementById(field)?.classList.add('is-invalid');
        } else if (value) {
            document.getElementById(field)?.classList.remove('is-invalid');
        }
    });
    
    if (missingFields.length > 0) {
        toastr.error(`Campos requeridos: ${missingFields.join(', ')}`, 'Error de Validaci√≥n');
        return;
    }
    
    // Simular guardado
    toastr.info('Guardando configuraci√≥n...', 'Procesando');
    
    setTimeout(() => {
        console.log('‚úÖ Configuraci√≥n guardada:', config);
        
        // Procesar archivos si existen
        processContextFiles(config.files);
        
        toastr.success('Configuraci√≥n guardada correctamente', '¬°√âxito!');
    }, 1500);
}

/**
 * Procesar archivos de contexto
 * @param {Object} files - Archivos a procesar
 */
function processContextFiles(files) {
    console.log('üìÅ Procesando archivos de contexto...');
    
    Object.keys(files).forEach(fileType => {
        const file = files[fileType];
        if (file) {
            console.log(`üìÑ Procesando archivo ${fileType}:`, file.name);
            
            // Validar tama√±o (m√°ximo 10MB)
            if (file.size > 10 * 1024 * 1024) {
                toastr.error(`El archivo ${file.name} es demasiado grande (m√°ximo 10MB)`, 'Error de Archivo');
                return;
            }
            
            // Validar tipo de archivo
            const allowedTypes = ['.pdf', '.txt', '.csv', '.xlsx', '.docx'];
            const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
            
            if (!allowedTypes.includes(fileExtension)) {
                toastr.error(`Tipo de archivo no permitido: ${fileExtension}`, 'Error de Archivo');
                return;
            }
            
            // Simular procesamiento por IA
            setTimeout(() => {
                toastr.success(`Archivo ${file.name} procesado correctamente`, 'Archivo Procesado');
            }, Math.random() * 2000 + 1000);
        }
    });
}

/**
 * Agregar bot√≥n de preview a la firma
 */
function addEmailPreviewButton() {
    // Agregar bot√≥n de preview despu√©s del textarea de firma
    setTimeout(() => {
        const signatureTextarea = document.getElementById('email_signature');
        if (signatureTextarea && !document.getElementById('preview-signature-btn')) {
            const previewButton = document.createElement('button');
            previewButton.type = 'button';
            previewButton.id = 'preview-signature-btn';
            previewButton.className = 'btn btn-outline-secondary btn-sm mt-2';
            previewButton.innerHTML = '<i class="fas fa-eye me-1"></i>Preview Email';
            previewButton.onclick = previewEmailTemplate;
            
            signatureTextarea.parentNode.appendChild(previewButton);
        }
    }, 1000);
}

/**
 * Inicializaci√≥n del Dashboard
 * Este c√≥digo se ejecuta cuando el documento est√° listo
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ Inicializando Dashboard Simple...');
    
    // A√±adir estilos CSS
    addDashboardStyles();
    
    // Verificar si hay un usuario autenticado
    if (typeof AuthService !== 'undefined' && AuthService.isAuthenticated()) {
        // Obtener datos de la empresa del usuario
        const companyData = JSON.parse(localStorage.getItem('companyData') || '{}');
        
        // Adaptar el dashboard seg√∫n el contexto de la empresa
        adaptOtherContextSimple(companyData);
        
        console.log('‚úÖ Dashboard inicializado correctamente');
    } else {
        console.error('‚ùå Usuario no autenticado');
        window.location.href = 'login.html';
    }
});
