generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id                     Int            @id @default(autoincrement())
  email                  String         @unique
  password               String
  companyName            String
  companyDescription     String?
  contactName            String
  phone                  String?
  position               String?
  apiKey                 String?        @unique
  role                   String         @default("client")
  isActive               Boolean        @default(true)
  avatar                 String?
  timezone               String         @default("UTC")
  language               String         @default("es")
  industry               String?
  website                String?
  address                String?
  stripeCustomerId       String?        @unique
  defaultPaymentMethodId String?
  plan                   String         @default("trial")
  subscriptionExpiresAt  DateTime?
  trialEndDate           DateTime?
  botLanguage            String?
  botName                String?
  botPersonality         String?
  welcomeMessage         String?
  confirmationMessage    String?
  subscriptionStatus     String?
  personality            String?
  emailConfig            Json?
  callConfig             Json?
  companyInfo            Json?
  billingInfo            Json?
  paymentMethods         Json?
  notificationConfig     Json?
  faqs                   Json?
  contextFiles           Json?
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  resetToken             String?
  resetTokenExpiry       DateTime?
  callsUsedThisMonth     Int            @default(0)
  stripePriceId          String?
  subscriptionPlan       String         @default("basic")
  usageResetDate         DateTime?
  businessHours          Json?
  analytics              Analytics[]
  callLogs               CallLog[]
  emailLogs              EmailLog[]
  notifications          Notification[]
  twilioNumbers          TwilioNumber[]

  @@index([email])
  @@index([plan])
  @@index([subscriptionExpiresAt])
  @@index([apiKey])
}

model TwilioNumber {
  id             Int      @id @default(autoincrement())
  clientId       Int
  phoneNumber    String   @unique
  twilioSid      String   @unique
  friendlyName   String?
  status         String   @default("active")
  originalNumber String?
  region         String?
  capabilities   String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  client         Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
  @@index([phoneNumber])
  @@index([status])
}

model CallLog {
  id               Int      @id @default(autoincrement())
  clientId         Int
  callId           String?
  twilioCallSid    String?
  callerNumber     String
  callerName       String?
  duration         Int?
  status           String   @default("completed")
  recordingUrl     String?
  transcription    String?
  analysis         Json?
  metadata         Json?
  callStatus       String?
  callDuration     Int?
  aiSummary        String?
  aiClassification String?
  urgencyLevel     String?
  callPurpose      String?
  contactInfo      String?
  managed          Boolean  @default(false)
  important        Boolean  @default(false)
  notificationSent Boolean  @default(false)
  notifiedTo       String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  client           Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
  @@index([callId])
  @@index([twilioCallSid])
  @@index([callerNumber])
  @@index([createdAt])
  @@index([status])
}

model EmailLog {
  id               Int      @id @default(autoincrement())
  clientId         Int
  emailId          String?
  messageId        String?
  fromAddress      String
  fromName         String?
  toAddress        String?
  subject          String?
  body             String?
  analysis         Json?
  response         String?
  status           String   @default("processed")
  metadata         Json?
  bodyPlain        String?
  bodyHtml         String?
  attachments      String?
  aiSummary        String?
  aiClassification String?
  forwardedTo      String?
  favorite         Boolean  @default(false)
  isRead           Boolean  @default(false)
  responseStatus   String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  client           Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
  @@index([messageId])
  @@index([createdAt])
  @@index([fromAddress])
}

model Analytics {
  id                 Int      @id @default(autoincrement())
  clientId           Int
  date               DateTime
  totalCalls         Int      @default(0)
  totalEmails        Int      @default(0)
  missedCalls        Int      @default(0)
  answeredCalls      Int      @default(0)
  avgCallDuration    Float    @default(0)
  emailsResponded    Int      @default(0)
  emailsForwarded    Int      @default(0)
  topCallCategories  String?
  topEmailCategories String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  client             Client   @relation(fields: [clientId], references: [id])

  @@unique([clientId, date])
  @@index([clientId, date])
}

model Notification {
  id        Int      @id @default(autoincrement())
  clientId  Int
  type      String
  status    String
  recipient String
  subject   String?
  content   String
  metadata  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
  @@index([type])
  @@index([status])
}

model CallerMemory {
  id                  Int      @id @default(autoincrement())
  clientId            Int
  callerPhone         String
  callerName          String?
  callerCompany       String?
  lastCallDate        DateTime @default(now())
  callCount           Int      @default(1)
  conversationHistory Json?
  notes               String?
  expiresAt           DateTime
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@unique([clientId, callerPhone])
  @@index([clientId])
  @@index([callerPhone])
  @@index([expiresAt])
  @@index([lastCallDate])
}
