const fs = require('fs');
const path = require('path');

console.log('üîç VERIFICANDO VERSI√ìN DEL FRONTEND EN PRODUCCI√ìN');
console.log('==================================================');

// Ruta del archivo JavaScript del frontend
const frontendJsPath = path.join(__dirname, '../../frontend/js/dashboard-simple-clean.js');

try {
    // Leer el archivo
    const content = fs.readFileSync(frontendJsPath, 'utf8');
    
    // Buscar la l√≠nea con la versi√≥n
    const versionMatch = content.match(/FRONTEND ACTUALIZADO - VERSI√ìN ([^']+)/);
    
    if (versionMatch) {
        console.log('‚úÖ Versi√≥n encontrada:', versionMatch[1]);
    } else {
        console.log('‚ùå No se encontr√≥ la l√≠nea de versi√≥n');
    }
    
    // Verificar si existe la funci√≥n collectBusinessHoursConfig
    const hasCollectFunction = content.includes('collectBusinessHoursConfig');
    console.log('‚úÖ Funci√≥n collectBusinessHoursConfig existe:', hasCollectFunction);
    
    // Verificar si existe el mapeo de d√≠as (no deber√≠a existir)
    const hasDayMapping = content.includes('dayMapping');
    console.log('‚ùå Mapeo de d√≠as (no deber√≠a existir):', hasDayMapping);
    
    // Verificar l√≠neas espec√≠ficas
    const hasAsyncCollection = content.includes('Se recopilar√° de forma as√≠ncrona despu√©s');
    console.log('‚úÖ Recopilaci√≥n as√≠ncrona configurada:', hasAsyncCollection);
    
    // Buscar la l√≠nea exacta donde se recopila businessHoursConfig
    const lines = content.split('\n');
    let foundConfigLine = false;
    
    for (let i = 0; i < lines.length; i++) {
        if (lines[i].includes('config.businessHoursConfig = collectBusinessHoursConfig()')) {
            console.log('‚úÖ L√≠nea de recopilaci√≥n encontrada en l√≠nea:', i + 1);
            foundConfigLine = true;
            break;
        }
    }
    
    if (!foundConfigLine) {
        console.log('‚ùå No se encontr√≥ la l√≠nea de recopilaci√≥n de businessHoursConfig');
    }
    
    console.log('\nüìä RESUMEN:');
    console.log('- Archivo existe:', fs.existsSync(frontendJsPath));
    console.log('- Tama√±o del archivo:', content.length, 'caracteres');
    console.log('- √öltima modificaci√≥n:', fs.statSync(frontendJsPath).mtime);
    
} catch (error) {
    console.error('‚ùå Error leyendo el archivo:', error.message);
}
