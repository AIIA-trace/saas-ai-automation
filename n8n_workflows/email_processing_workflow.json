{
  "name": "Procesamiento de Emails",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "email",
        "responseMode": "responseNode",
        "options": {
          "rawBody": true
        }
      },
      "name": "Webhook Email",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Extraemos datos del email recibido en el webhook\nconst emailData = $input.item.json;\n\nconst emailId = emailData.emailId;\nconst clientId = emailData.clientId;\nconst fromAddress = emailData.fromAddress;\nconst subject = emailData.subject;\nconst body = emailData.body;\nconst emailConfig = emailData.emailConfig;\nconst companyInfo = emailData.companyInfo;\nconst notificationConfig = emailData.notificationConfig;\n\n// Creamos un objeto con los datos procesados\nreturn {\n  json: {\n    emailId,\n    clientId,\n    fromAddress,\n    subject,\n    body,\n    emailConfig,\n    companyInfo,\n    notificationConfig,\n    processStartTime: new Date().toISOString()\n  }\n};"
      },
      "name": "Extraer Datos",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Eres un asistente encargado de analizar emails recibidos para la empresa \" + $node[\"Extraer Datos\"].json.companyInfo.companyName + \". Tu tarea es extraer la siguiente información en formato JSON:\\n1. Nombre del remitente\\n2. Información de contacto proporcionada\\n3. Motivo principal del email\\n4. Nivel de urgencia (bajo, medio, alto)\\n5. Clasificación del tipo de email (consulta, queja, solicitud de información, etc.)\\n6. Resumen breve y conciso del email (máximo 3 frases)\\n7. Palabras clave importantes para clasificación\\n\\nInformación sobre la empresa: \" + ($node[\"Extraer Datos\"].json.companyInfo.description || '')\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Asunto: \" + $node[\"Extraer Datos\"].json.subject + \"\\n\\nContenido: \" + $node[\"Extraer Datos\"].json.body\n    }\n  ],\n  \"temperature\": 0.3,\n  \"max_tokens\": 500\n}"
      },
      "name": "Analizar con GPT",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        650,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Extraer el contenido JSON del resultado de GPT\nconst gptResponse = $input.item.json.choices[0].message.content;\n\n// Intentar extraer JSON si está entre comillas\nlet jsonMatch = gptResponse.match(/```json([\\s\\S]*?)```/) || gptResponse.match(/```([\\s\\S]*?)```/);\nlet jsonString = jsonMatch ? jsonMatch[1].trim() : gptResponse;\n\n// Si falla, intentamos usar toda la respuesta\nlet analysisData;\ntry {\n  analysisData = JSON.parse(jsonString);\n} catch (e) {\n  // Si falla el parsing, intentamos recuperar cualquier objeto JSON en la respuesta\n  const possibleJson = gptResponse.match(/{[\\s\\S]*}/);\n  if (possibleJson) {\n    try {\n      analysisData = JSON.parse(possibleJson[0]);\n    } catch (e2) {\n      // Si todo falla, creamos un objeto básico\n      analysisData = {\n        name: \"No identificado\",\n        contactInfo: \"No proporcionado\",\n        purpose: \"No determinado\",\n        urgencyLevel: \"medio\",\n        classification: \"No clasificado\",\n        summary: \"No fue posible analizar el email\",\n        keywords: []\n      };\n    }\n  }\n}\n\n// Combinamos los datos originales con el análisis\nconst result = {\n  ...analysisData,\n  emailId: $input.item.json[\"Extraer Datos\"].emailId,\n  clientId: $input.item.json[\"Extraer Datos\"].clientId,\n  subject: $input.item.json[\"Extraer Datos\"].subject,\n  body: $input.item.json[\"Extraer Datos\"].body,\n  fromAddress: $input.item.json[\"Extraer Datos\"].fromAddress,\n  rawAnalysis: gptResponse\n};\n\nreturn { json: result };"
      },
      "name": "Procesar Análisis",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        850,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Eres un asistente encargado de determinar a qué direcciones de email debe reenviarse un correo entrante.\\nEvaluarás el contenido del correo contra un conjunto de reglas y devolverás la lista de direcciones a las que debe reenviarse.\\n\\nReglas de reenvío (en formato JSON):\\n\" + JSON.stringify($node[\"Extraer Datos\"].json.emailConfig.forwardingRules || []) + \"\\n\\nDebes analizar el asunto y cuerpo del email, y determinar qué reglas se cumplen.\\nSi se cumplen varias reglas, incluye todas las direcciones correspondientes.\\nSi no se cumple ninguna regla, utiliza los destinatarios por defecto.\\n\\nResponde únicamente con un objeto JSON con la siguiente estructura:\\n{ \\\"recipients\\\": [\\\"email1@dominio.com\\\", \\\"email2@dominio.com\\\"] }\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Asunto: \" + $node[\"Extraer Datos\"].json.subject + \"\\n\\nCuerpo: \" + $node[\"Extraer Datos\"].json.body\n    }\n  ],\n  \"temperature\": 0.1,\n  \"max_tokens\": 300\n}"
      },
      "name": "Determinar Destinatarios",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1050,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Extraer los destinatarios del resultado de GPT\nconst gptResponse = $input.item.json.choices[0].message.content;\n\n// Intentar extraer JSON si está entre comillas\nlet jsonMatch = gptResponse.match(/```json([\\s\\S]*?)```/) || gptResponse.match(/```([\\s\\S]*?)```/);\nlet jsonString = jsonMatch ? jsonMatch[1].trim() : gptResponse;\n\n// Variable para almacenar los destinatarios\nlet recipients = [];\n\n// Intentar parsear la respuesta\ntry {\n  const forwardingData = JSON.parse(jsonString);\n  if (forwardingData.recipients && Array.isArray(forwardingData.recipients)) {\n    recipients = forwardingData.recipients;\n  }\n} catch (e) {\n  // Si falla el parsing, intentamos recuperar cualquier objeto JSON en la respuesta\n  const possibleJson = gptResponse.match(/{[\\s\\S]*}/);\n  if (possibleJson) {\n    try {\n      const forwardingData = JSON.parse(possibleJson[0]);\n      if (forwardingData.recipients && Array.isArray(forwardingData.recipients)) {\n        recipients = forwardingData.recipients;\n      }\n    } catch (e2) {\n      // Si todo falla, usamos los destinatarios por defecto\n      recipients = $input.item.json[\"Extraer Datos\"].emailConfig.defaultRecipients || [];\n    }\n  } else {\n    recipients = $input.item.json[\"Extraer Datos\"].emailConfig.defaultRecipients || [];\n  }\n}\n\n// Si la lista está vacía, usamos los destinatarios por defecto\nif (recipients.length === 0) {\n  recipients = $input.item.json[\"Extraer Datos\"].emailConfig.defaultRecipients || [];\n}\n\n// Preparar datos para envío de emails\nconst emailData = {\n  fromName: $input.item.json[\"Procesar Análisis\"].name,\n  fromAddress: $input.item.json[\"Extraer Datos\"].fromAddress,\n  subject: $input.item.json[\"Extraer Datos\"].subject,\n  body: $input.item.json[\"Extraer Datos\"].body,\n  urgencyLevel: $input.item.json[\"Procesar Análisis\"].urgencyLevel,\n  aiSummary: $input.item.json[\"Procesar Análisis\"].summary\n};\n\nreturn {\n  json: {\n    recipients,\n    emailData\n  }\n};"
      },
      "name": "Procesar Destinatarios",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1250,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "smtpOAuth2",
        "fromEmail": "={{$env.SMTP_USER}}",
        "toEmail": "={{$node[\"Procesar Destinatarios\"].json.recipients.join(',')}}",
        "subject": "=Fwd: {{$node[\"Extraer Datos\"].json.subject || 'Sin asunto'}}",
        "text": "=\n---------- Email Reenviado ----------\nDe: {{$node[\"Procesar Análisis\"].json.name || 'No identificado'}} <{{$node[\"Extraer Datos\"].json.fromAddress}}>\nAsunto: {{$node[\"Extraer Datos\"].json.subject || 'Sin asunto'}}\nFecha: {{$now.toDateString()}}\n\nResumen IA: {{$node[\"Procesar Análisis\"].json.summary || 'No disponible'}}\n\n------------------------\n\n{{$node[\"Extraer Datos\"].json.body}}\n\n------------------------\nEste email fue procesado y reenviado automáticamente por el sistema de IA.",
        "html": "=<div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n  <div style=\"background-color: #f0f0f0; padding: 15px; border-radius: 4px; margin-bottom: 20px;\">\n    <h3 style=\"margin-top: 0;\">Resumen generado por IA</h3>\n    <p>{{$node[\"Procesar Análisis\"].json.summary || 'No disponible'}}</p>\n    <p><strong>Urgencia:</strong> <span style=\"color: {{$node[\"Procesar Análisis\"].json.urgencyLevel === 'alto' ? '#FF4136' : ($node[\"Procesar Análisis\"].json.urgencyLevel === 'medio' ? '#FF851B' : '#2ECC40')}}\">{{$node[\"Procesar Análisis\"].json.urgencyLevel || 'No determinada'}}</span></p>\n    <p><strong>Clasificación:</strong> {{$node[\"Procesar Análisis\"].json.classification || 'No clasificado'}}</p>\n  </div>\n  \n  <div style=\"border-left: 4px solid #ddd; padding-left: 15px; margin-bottom: 20px;\">\n    <p><strong>De:</strong> {{$node[\"Procesar Análisis\"].json.name || 'No identificado'}} &lt;{{$node[\"Extraer Datos\"].json.fromAddress}}&gt;</p>\n    <p><strong>Asunto:</strong> {{$node[\"Extraer Datos\"].json.subject || 'Sin asunto'}}</p>\n    <p><strong>Fecha:</strong> {{$now.toDateString()}}</p>\n  </div>\n  \n  <div style=\"border-top: 1px solid #ddd; padding-top: 15px;\">\n    <p>{{$node[\"Extraer Datos\"].json.body}}</p>\n  </div>\n  \n  <p style=\"font-size: 12px; color: #666; margin-top: 20px; border-top: 1px solid #ddd; padding-top: 10px;\">\n    Este email fue procesado y reenviado automáticamente por el sistema de IA.\n  </p>\n</div>",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "name": "Reenviar Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1450,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "smtpOAuth2",
        "fromEmail": "={{$env.SMTP_USER}}",
        "toEmail": "={{$node[\"Extraer Datos\"].json.fromAddress}}",
        "subject": "=Re: {{$node[\"Extraer Datos\"].json.subject || 'Sin asunto'}}",
        "text": "=Estimado/a cliente,\n\n{{$node[\"Extraer Datos\"].json.companyInfo.autoReplyMessage || 'Gracias por su mensaje. Lo hemos recibido y será atendido por nuestro equipo lo antes posible.'}}\n\nAtentamente,\n{{$node[\"Extraer Datos\"].json.companyInfo.companyName}}\n\n--\nEste es un mensaje automático. Por favor, no responda a este email.",
        "html": "=<div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n  <h2 style=\"color: #333;\">Confirmación de recepción</h2>\n  <div style=\"border: 1px solid #ddd; padding: 15px; border-radius: 4px;\">\n    <p>Estimado/a cliente,</p>\n    <p>{{$node[\"Extraer Datos\"].json.companyInfo.autoReplyMessage || 'Gracias por su mensaje. Lo hemos recibido y será atendido por nuestro equipo lo antes posible.'}}</p>\n    <p>Atentamente,<br>{{$node[\"Extraer Datos\"].json.companyInfo.companyName}}</p>\n  </div>\n  <p style=\"font-size: 12px; color: #666; margin-top: 20px;\">\n    Este es un mensaje automático. Por favor, no responda a este email.\n  </p>\n</div>",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "name": "Confirmar Recepción",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1450,
        500
      ]
    },
    {
      "parameters": {
        "url": "=https://{{$env.API_BASE_URL}}/webhooks/ai-results",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n  \"type\": \"email\",\n  \"id\": $node[\"Extraer Datos\"].json.emailId,\n  \"aiSummary\": $node[\"Procesar Análisis\"].json.summary,\n  \"aiClassification\": $node[\"Procesar Análisis\"].json.classification,\n  \"forwardedTo\": $node[\"Procesar Destinatarios\"].json.recipients\n}"
      },
      "name": "Actualizar API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1650,
        300
      ]
    },
    {
      "parameters": {
        "respondWithJson": true,
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Email procesado correctamente\",\n  \"emailId\": {{$node[\"Extraer Datos\"].json.emailId}},\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "name": "Responder a Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1850,
        300
      ]
    }
  ],
  "connections": {
    "Webhook Email": {
      "main": [
        [
          {
            "node": "Extraer Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraer Datos": {
      "main": [
        [
          {
            "node": "Analizar con GPT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analizar con GPT": {
      "main": [
        [
          {
            "node": "Procesar Análisis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Análisis": {
      "main": [
        [
          {
            "node": "Determinar Destinatarios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determinar Destinatarios": {
      "main": [
        [
          {
            "node": "Procesar Destinatarios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Destinatarios": {
      "main": [
        [
          {
            "node": "Reenviar Email",
            "type": "main",
            "index": 0
          },
          {
            "node": "Confirmar Recepción",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reenviar Email": {
      "main": [
        [
          {
            "node": "Actualizar API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar API": {
      "main": [
        [
          {
            "node": "Responder a Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Confirmar Recepción": {
      "main": [
        [
          {
            "node": "Actualizar API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "2"
}
